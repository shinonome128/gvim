"=============================================================================
"    Description: .gvimrcサンプル設定
"         Author:
"  Last Modified: 0000-00-00 00:00
"        Version: 0.00
"=============================================================================
scriptencoding cp932
"----------------------------------------
" システム設定
"----------------------------------------
" エラー時の音とビジュアルベルの抑制
set noerrorbells
set novisualbell
set visualbell t_vb=


" IMEの状態をカラー表示
if has('multi_byte_ime')
  highlight Cursor guifg=NONE guibg=Green
  highlight CursorIM guifg=NONE guibg=Purple
endif

" ime setting
if has('multi_byte_ime') || has('xim') || has('gui_macvim')
  set iminsert=0
  set imsearch=0
  inoremap <silent> <ESC> <ESC>:set iminsert=0<CR>
endif

"----------------------------------------
" 表示設定
"----------------------------------------
" ツールバーを非表示
" set guioptions-=T
" コマンドラインの高さ
" set cmdheight=2

" カラー設定:
" colorscheme jellybeans
" colorscheme desert
colorscheme desert
" colorscheme hybrid

" フォント設定
" フォントは英語名で指定すると問題が起きにくくなります
if has('xfontset')
  " set guifontset=a14,r14,k14
elseif has('unix')

elseif has('mac')
  " set guifont=Osaka-Mono:h14
elseif has('win32') || has('win64')
    set guifont=MS_Gothic:h10:cSHIFTJIS
  " set guifontwide=MS_Gothic:h10:cSHIFTJIS
endif

" 印刷用フォント
if has('printer')
  if has('win32') || has('win64')
  " set printfont=MS_Mincho:h12:cSHIFTJIS
  " set printfont=MS_Gothic:h12:cSHIFTJIS
  endif
endif

""""""""""""""""""""""""""""""
" Window位置の保存と復帰
""""""""""""""""""""""""""""""
if has('unix')
  let s:infofile = '~/.vim/.vimpos'
else
  let s:infofile = '$VIM/.vimpos'
endif

function! s:SaveWindowParam(filename)
  redir => pos
  exec 'winpos'
  redir END
  let pos = matchstr(pos, 'X[-0-9 ]\+,\s*Y[-0-9 ]\+$')
  let file = expand(a:filename)
  let str = []
  let cmd = 'winpos '.substitute(pos, '[^-0-9 ]', '', 'g')
  cal add(str, cmd)
  let l = &lines
  let c = &columns
  cal add(str, 'set lines='. l.' columns='. c)
  silent! let ostr = readfile(file)
  if str != ostr
    call writefile(str, file)
  endif
endfunction

augroup SaveWindowParam
  autocmd!
  execute 'autocmd SaveWindowParam VimLeave * call s:SaveWindowParam("'.s:infofile.'")'
augroup END

if filereadable(expand(s:infofile))
  execute 'source '.s:infofile
endif
unlet s:infofile

"----------------------------------------
"メニューアイテム作成
"----------------------------------------
silent! aunmenu &File.Save
silent! aunmenu &File.保存(&S)
silent! aunmenu &File.差分表示(&D)\.\.\.

let message_revert="再読込しますか?"
amenu <silent> 10.330 &File.再読込(&U)<Tab>:e!  :if confirm(message_revert, "&Yes\n&No")==1<Bar> e! <Bar> endif<CR>
amenu <silent> 10.331 &File.バッファ削除(&K)<Tab>:bd  :confirm bd<CR>
amenu <silent> 10.340 &File.保存(&W)<Tab>:w  :if expand('%') == ''<Bar>browse confirm w<Bar>else<Bar>confirm w<Bar>endif<CR>
amenu <silent> 10.341 &File.更新時保存(&S)<Tab>:update  :if expand('%') == ''<Bar>browse confirm w<Bar>else<Bar>confirm update<Bar>endif<CR>
amenu <silent> 10.400 &File.現バッファ差分表示(&D)<Tab>:DiffOrig  :DiffOrig<CR>
amenu <silent> 10.401 &File.裏バッファと差分表示(&D)<Tab>:Diff\ #  :Diff #<CR>
amenu <silent> 10.402 &File.差分表示(&D)<Tab>:Diff  :browse vertical diffsplit<CR>

"
"----------------------------------------
" 自分設定
"----------------------------------------

"GitHub README.mdファイル置換用コマンド
"アスタリスクは直前の表現が0個以上
command! Readme :%s/[ ]*$//g | %s/$/  /g | noh | write

"XMLファイル置換用コマンド
"command! DiffOrig vert new | set bt=nofile | r # | 0d_ | diffthis | wincmd p | diffthis
command! Xml :%s/></>\r</g | filetype indent on | setf xml | normal gg=G

"jsonファイル置換用コマンド
"VIMフォルダに環境変数pathが通っていないと機能しない
command! Json :%! jq-win64.exe .

"メモ開きコマンド
command! Memo :e C:\Users\shino\bin\vim\memo.txt
"
"ACIバックアップ展開コマンド
command! Aci :arg *xml | argdo Xml
"
"" カレント行ハイライト
set cursorline

" アンダーラインを引く(color terminal)
highlight CursorLine cterm=underline ctermfg=NONE ctermbg=NONE

" アンダーラインを引く(gui)
highlight CursorLine gui=underline guifg=NONE guibg=NONE

" ファイルのエンコードはutf-8, unix で統一する
:set encoding=utf-8
:set fileformat=unix

" Python クイックラン設定
let g:quickrun_config = {
      \ 'python': {
      \   'command' : 'py',
      \   'exec': '%c %s',
      \ },
      \ }

" エンコードをutf-8, 改行をunix に変換するコマンド
command! Py :set fenc=utf-8 | set fileformat=unix | w!

" 行番号の表示
set number

" ウンコ(UnDo用にに自動生成される hoge.un^ )ファイルの防止
set noundofile

" ウンコ(一世代バックアップ用にに自動生成される hoge^ )ファイルの防止
set nobackup

" ヤンクをレジスタ*に送る、クリップボードに送る
set clipboard+=unnamed
